bin_motifs_heatmap <- ggplot(plot_data) +
aes(x = factor(motif_markdown, levels = axis_orders[["x"]]), y = factor(name, levels =  sort(axis_orders[["y"]], decreasing = TRUE))) +
geom_tile(aes(fill = factor(identified, levels=c("Yes", "No"))), color = "#ffffff00", alpha = 0) +
scale_fill_manual(values = c("No" = PLOT_COLORS[[4]], "Yes" = PLOT_COLORS[[2]])) +
guides(fill = guide_legend(
title = "Identified",
override.aes = list(alpha = 1))
) +
new_scale("fill") +
geom_tile(aes(fill = mean), linewidth = 0, alpha = 0, color = "#33333300") +
scale_fill_gradient2(
limits = c(0, 1), low = "white", high = "gray20",
labels = scales::percent
) +
new_scale("fill") +
geom_tile(aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[4], na.value = "white") +
new_scale("fill") +
geom_tile(data=plot_data[identified == "Yes"], aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[2], na.value = "white") +
geom_text(data=plot_data[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=0, size=0.5) +
facet_grid(sample_type~pretty_modtype, space="free", scale="free") +
theme(
axis.text.y = element_markdown(size = 6),
axis.text.x = element_markdown(angle = 90, hjust = 1, vjust = 0.5, size = 5),
panel.grid.minor = element_blank(),  # Remove minor gridlines
panel.background = element_blank(),   # Remove panel background,
panel.margin = unit(0.3, "lines"),
panel.border = element_rect(colour = "#141414", fill=NA, linewidth = 0),
strip.placement = "outside",
strip.text.y.left = element_markdown(angle = 0, vjust = 0.5, hjust = 0, size =15),
strip.background = element_blank()
) +
labs(
y = NULL,
x = "Motifs"
) +
geom_text(aes(color = "No motif observations"), alpha = 0, label ="") +
geom_text(aes(color = "Assigned MTase"), alpha=0, label = "") +
geom_text(data=plot_data[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=-0.5, nudge_y = -0.8, size=3) +
geom_text(data=plot_data[linked == TRUE], label = "+", col = "orange", hjust=0.5, vjust=-0.5, size=3, nudge_y = -1) +
scale_color_manual(name = "Indicator", values = c("No motif observations" = "black", "Assigned MTase" = "orange")) +
guides(color = guide_legend(override.aes = list(alpha = 1, label = c("+", "●"), size = c(3, 2),  fill = c("orange", "black"))))
bin_motifs_heatmap
ggsave(
"figures/mono_mock_bin_motifs.png",
bin_motifs_heatmap,
width = 16,
height = 6
)
# Subset hetmap
plot_data[
str_detect(bin, "coli")
]
# Subset hetmap
plot_data[TRUE][
str_detect(bin, "coli")
][
, any(identified == "Yes") := keep, by = .(motif_markdown)
]
# Subset hetmap
plot_data[TRUE][
str_detect(bin, "coli")
][
, any(identified == "Yes") := keep, by = .(motif_markdown)
]
plot_data[TRUE][
str_detect(bin, "coli")
]
# Subset hetmap
plot_data[TRUE][
str_detect(bin, "coli")
][
, keep := any(identified == "Yes") := , by = .(motif_markdown)
# Subset hetmap
plot_data[TRUE][
str_detect(bin, "coli")
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
]
# Subset hetmap
plot_data[TRUE][
str_detect(bin, "coli")
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep = TRUE][, keep := NULL]
# Subset hetmap
plot_data[TRUE][
str_detect(bin, "coli")
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
# Subset hetmap
plot_data_ecoli <- plot_data[TRUE][
str_detect(bin, "coli")
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
plot_data_ecoli
## Full ploy with all motifs
heatmap_plot <- function(df) {
axis_orders <- get_axis_order(dcast(df, name ~ motif_markdown, value.var = "mean", fill = 0, fun.aggregate = mean))
heatmap_plot <- ggplot(df) +
aes(x = factor(motif_markdown, levels = axis_orders[["x"]]), y = factor(name, levels =  sort(axis_orders[["y"]], decreasing = TRUE))) +
geom_tile(aes(fill = factor(identified, levels=c("Yes", "No"))), color = "#ffffff00", alpha = 0) +
scale_fill_manual(values = c("No" = PLOT_COLORS[[4]], "Yes" = PLOT_COLORS[[2]])) +
guides(fill = guide_legend(
title = "Identified",
override.aes = list(alpha = 1))
) +
new_scale("fill") +
geom_tile(aes(fill = mean), linewidth = 0, alpha = 0, color = "#33333300") +
scale_fill_gradient2(
limits = c(0, 1), low = "white", high = "gray20",
labels = scales::percent
) +
new_scale("fill") +
geom_tile(aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[4], na.value = "white") +
new_scale("fill") +
geom_tile(data=df[identified == "Yes"], aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[2], na.value = "white") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=0, size=0.5) +
facet_grid(sample_type~pretty_modtype, space="free", scale="free") +
theme(
axis.text.y = element_markdown(size = 6),
axis.text.x = element_markdown(angle = 90, hjust = 1, vjust = 0.5, size = 5),
panel.grid.minor = element_blank(),  # Remove minor gridlines
panel.background = element_blank(),   # Remove panel background,
panel.margin = unit(0.3, "lines"),
panel.border = element_rect(colour = "#141414", fill=NA, linewidth = 0),
strip.placement = "outside",
strip.text.y.left = element_markdown(angle = 0, vjust = 0.5, hjust = 0, size =15),
strip.background = element_blank()
) +
labs(
y = NULL,
x = "Motifs"
) +
geom_text(aes(color = "No motif observations"), alpha = 0, label ="") +
geom_text(aes(color = "Assigned MTase"), alpha=0, label = "") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=-0.5, nudge_y = -0.8, size=3) +
geom_text(data=df[linked == TRUE], label = "+", col = "orange", hjust=0.5, vjust=-0.5, size=3, nudge_y = -1) +
scale_color_manual(name = "Indicator", values = c("No motif observations" = "black", "Assigned MTase" = "orange")) +
guides(color = guide_legend(override.aes = list(alpha = 1, label = c("+", "●"), size = c(3, 2),  fill = c("orange", "black"))))
return(heatmap_plot)
}
heatmap_plot(plot_data)
heatmap_plot(plot_data_ecoli)
## Full ploy with all motifs
heatmap_plot <- function(df) {
axis_orders <- get_axis_order(dcast(df, name ~ motif_markdown, value.var = "mean", fill = 0, fun.aggregate = mean))
heatmap_plot <- ggplot(df) +
aes(x = factor(motif_markdown, levels = axis_orders[["x"]]), y = factor(name, levels =  sort(axis_orders[["y"]], decreasing = TRUE))) +
geom_tile(aes(fill = factor(identified, levels=c("Yes", "No"))), color = "#ffffff00", alpha = 0) +
scale_fill_manual(values = c("No" = PLOT_COLORS[[4]], "Yes" = PLOT_COLORS[[2]])) +
guides(fill = guide_legend(
title = "Identified",
override.aes = list(alpha = 1))
) +
new_scale("fill") +
geom_tile(aes(fill = mean), linewidth = 0, alpha = 0, color = "#33333300") +
scale_fill_gradient2(
limits = c(0, 1), low = "white", high = "gray20",
labels = scales::percent
) +
new_scale("fill") +
geom_tile(aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[4], na.value = "white") +
new_scale("fill") +
geom_tile(data=df[identified == "Yes"], aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[2], na.value = "white") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=0, size=0.5) +
facet_grid(sample_type~pretty_modtype, space="free", scale="free") +
theme(
axis.text.y = element_markdown(size = 6),
axis.text.x = element_markdown(angle = 90, hjust = 1, vjust = 0.5, size = 5),
panel.grid.minor = element_blank(),  # Remove minor gridlines
panel.background = element_blank(),   # Remove panel background,
panel.margin = unit(0.3, "lines"),
panel.border = element_rect(colour = "#141414", fill=NA, linewidth = 0),
strip.placement = "outside",
strip.text.y.left = element_markdown(angle = 0, vjust = 0.5, hjust = 0, size =15),
strip.background = element_blank()
) +
labs(
y = NULL,
x = "Motifs"
) +
geom_text(aes(color = "No motif observations"), alpha = 0, label ="") +
geom_text(aes(color = "Assigned MTase"), alpha=0, label = "") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=-0.5, nudge_y = -0.8, size=3) +
geom_text(data=df[linked == TRUE], label = "+", col = "orange", hjust=0.5, vjust=-0.5, size=3, nudge_y = -1) +
scale_color_manual(name = "Indicator", values = c("No motif observations" = "black", "Assigned MTase" = "orange")) +
guides(color = guide_legend(override.aes = list(alpha = 1, label = c("+", "●"), size = c(3, 2),  fill = c("orange", "black"))))
return(heatmap_plot)
}
plot_data <- bin_motifs_full_filt
heatmap_full <- heatmap_plot(plot_data)
ggsave(
"figures/mono_mock_bin_motifs.png",
heatmap_full,
width = 16,
height = 6
)
ggsave(
"figures/heatmap_ecoli.png",
heatmap_ecoli,
width = 16,
height = 6
)
# Subset hetmap
plot_data_ecoli <- plot_data[TRUE][
str_detect(bin, "coli")
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
heatmap_ecoli <- heatmap_plot(plot_data_ecoli)
ggsave(
"figures/heatmap_ecoli.png",
heatmap_ecoli,
width = 16,
height = 6
)
ggsave(
"figures/motif_heatmap_ecoli.png",
heatmap_ecoli,
width = 16,
height = 6
)
ggsave(
"figures/motif_heatmap.png",
heatmap_full,
width = 16,
height = 6
)
## Full ploy with all motifs
heatmap_plot <- function(df) {
axis_orders <- get_axis_order(dcast(df, name ~ motif_markdown, value.var = "mean", fill = 0, fun.aggregate = mean))
heatmap_plot <- ggplot(df) +
aes(x = factor(motif_markdown, levels = axis_orders[["x"]]), y = factor(name, levels =  sort(axis_orders[["y"]], decreasing = TRUE))) +
geom_tile(aes(fill = factor(identified, levels=c("Yes", "No"))), color = "#ffffff00", alpha = 0) +
scale_fill_manual(values = c("No" = PLOT_COLORS[[4]], "Yes" = PLOT_COLORS[[2]])) +
guides(fill = guide_legend(
title = "Identified",
override.aes = list(alpha = 1))
) +
new_scale("fill") +
geom_tile(aes(fill = mean), linewidth = 0, alpha = 0, color = "#33333300") +
scale_fill_gradient2(
limits = c(0, 1), low = "white", high = "gray20",
labels = scales::percent
) +
new_scale("fill") +
geom_tile(aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[4], na.value = "white") +
new_scale("fill") +
geom_tile(data=df[identified == "Yes"], aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[2], na.value = "white") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=0, size=0.5) +
facet_grid(sample_type~pretty_modtype, space="free", scale="free") +
theme(
axis.text.y = element_markdown(size = 6),
axis.text.x = element_markdown(angle = 90, hjust = 1, vjust = 0.5, size = 5),
panel.grid.minor = element_blank(),  # Remove minor gridlines
panel.background = element_blank(),   # Remove panel background,
panel.margin = unit(0.3, "lines"),
panel.border = element_rect(colour = "#141414", fill=NA, linewidth = 0),
strip.placement = "outside",
strip.text.y.left = element_markdown(angle = 0, vjust = 0.5, hjust = 0, size =15),
strip.background = element_blank()
) +
labs(
y = NULL,
x = "Motifs"
) +
geom_text(aes(color = "No motif observations"), alpha = 0, label ="") +
geom_text(aes(color = "Assigned MTase"), alpha=0, label = "") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=0.5, size=3) +
geom_text(data=df[linked == TRUE], label = "+", col = "orange", hjust=0.5, vjust=0.5, size=3) +
scale_color_manual(name = "Indicator", values = c("No motif observations" = "black", "Assigned MTase" = "orange")) +
guides(color = guide_legend(override.aes = list(alpha = 1, label = c("+", "●"), size = c(3, 2),  fill = c("orange", "black"))))
return(heatmap_plot)
}
plot_data <- bin_motifs_full_filt
heatmap_full <- heatmap_plot(plot_data)
ggsave(
"figures/motif_heatmap.png",
heatmap_full,
width = 16,
height = 6
)
# Subset hetmap
plot_data_ecoli <- plot_data[TRUE][
str_detect(bin, "coli")
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
heatmap_ecoli <- heatmap_plot(plot_data_ecoli)
ggsave(
"figures/motif_heatmap_ecoli.png",
heatmap_ecoli,
width = 16,
height = 6
)
## Full ploy with all motifs
heatmap_plot <- function(df) {
axis_orders <- get_axis_order(dcast(df, name ~ motif_markdown, value.var = "mean", fill = 0, fun.aggregate = mean))
heatmap_plot <- ggplot(df) +
aes(x = factor(motif_markdown, levels = axis_orders[["x"]]), y = factor(name, levels =  sort(axis_orders[["y"]], decreasing = TRUE))) +
geom_tile(aes(fill = factor(identified, levels=c("Yes", "No"))), color = "#ffffff00", alpha = 0) +
scale_fill_manual(values = c("No" = PLOT_COLORS[[4]], "Yes" = PLOT_COLORS[[2]])) +
guides(fill = guide_legend(
title = "Identified",
override.aes = list(alpha = 1))
) +
new_scale("fill") +
geom_tile(aes(fill = mean), linewidth = 0, alpha = 0, color = "#33333300") +
scale_fill_gradient2(
limits = c(0, 1), low = "white", high = "gray20",
labels = scales::percent
) +
new_scale("fill") +
geom_tile(aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[4], na.value = "white") +
new_scale("fill") +
geom_tile(data=df[identified == "Yes"], aes(fill = mean),  color = "black",linewidth = 0.1) +
scale_fill_gradient2(guide = "none", limits = c(0, 1), low = "white", high =  PLOT_COLORS[2], na.value = "white") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=0, size=0.5) +
facet_grid(sample_type~pretty_modtype, space="free", scale="free") +
theme(
axis.text.y = element_markdown(size = 6),
axis.text.x = element_markdown(angle = 90, hjust = 1, vjust = 0.5, size = 5),
panel.grid.minor = element_blank(),  # Remove minor gridlines
panel.background = element_blank(),   # Remove panel background,
panel.margin = unit(0.3, "lines"),
panel.border = element_rect(colour = "#141414", fill=NA, linewidth = 0),
strip.placement = "outside",
strip.text.y.left = element_markdown(angle = 0, vjust = 0.5, hjust = 0, size =15),
strip.background = element_blank()
) +
labs(
y = NULL,
x = "Motifs"
) +
geom_text(aes(color = "No motif observations"), alpha = 0, label ="") +
geom_text(aes(color = "Assigned MTase"), alpha=0, label = "") +
geom_text(data=df[(n_mod_bin.scored + n_nomod_bin.scored)==0], label = ".", hjust=0.5, vjust=0.5, size=3) +
geom_text(data=df[linked == TRUE], label = "+", col = "orange", hjust=0.5, vjust=0.5, size=3) +
scale_color_manual(name = "Indicator", values = c("No motif observations" = "black", "Assigned MTase" = "orange")) +
guides(color = guide_legend(override.aes = list(alpha = 1, label = c("+", "●"), size = c(3, 2),  fill = c("orange", "black"))))
return(heatmap_plot)
}
plot_data_gold_standard <- plot_data[TRUE][
str_detect(bin, gold_standard)
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
# subset gold standard
gold_standard <- c("Anabaena variabilis", "Cellulophaga lytica", "Escherichia coli", "Kangiella aquimarina", "Meiothermus ruber", "Shewanella oneidensis")
plot_data_gold_standard <- plot_data[TRUE][
str_detect(bin, gold_standard)
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
plot_data_gold_standard <- plot_data[TRUE][
str_detect(bin %in% gold_standard)
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
plot_data_gold_standard <- plot_data[TRUE][
bin %in% gold_standard
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
plot_data_gold_standard <- plot_data[TRUE][
name %in% gold_standard
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
plot_data_gold_standard
# subset gold standard
gold_standard <- c("Anabaena variabilis", "Cellulophaga lytica", "Escherichia coli", "Kangiella aquimarina", "Meiothermus ruber", "Shewanella oneidensis")
plot_data_gold_standard <- plot_data[TRUE][
name %in% gold_standard
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
heatmap_gold_standard <- heatmap_plot(plot_data_gold_standard)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_ecoli,
width = 16,
height = 6
)
ggsave(
"figures/motif_heatmap_ecoli.png",
heatmap_ecoli,
width = 6,
height = 3
)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 16,
height = 6
)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 12,
height = 4
)
plot_data_gold_standard <- plot_data[TRUE][
name %in% gold_standard
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL][
sample_type == "Isolates"
]
heatmap_gold_standard <- heatmap_plot(plot_data_gold_standard)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 12,
height = 4
)
View(plot_data)
# subset gold standard
gold_standard <- c("Zymomonas mobilis", "Cellulophaga lytica", "Escherichia coli", "Kangiella aquimarina", "Meiothermus ruber", "Shewanella oneidensis")
plot_data_gold_standard <- plot_data[TRUE][
name %in% gold_standard
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL][
sample_type == "Isolates"
]
heatmap_gold_standard <- heatmap_plot(plot_data_gold_standard)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 12,
height = 4
)
plot_data_gold_standard <- plot_data[TRUE][
sample_type == "Isolates"
][
name %in% gold_standard
][
, keep := any(identified == "Yes"), by = .(motif_markdown)
][keep == TRUE][, keep := NULL]
heatmap_gold_standard <- heatmap_plot(plot_data_gold_standard)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 12,
height = 4
)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 10,
height = 3
)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 10,
height = 2.5
)
ggsave(
"figures/motif_heatmap_gold_standard.png",
heatmap_gold_standard,
width = 8,
height = 2.5
)
gc()
pacman::p_load(
"data.table",
"ggplot2",
"stringr",
"tidyr",
"dplyr",
"ggtext",
"pheatmap",
"purrr",
"here",
"ggnewscale",
"Biostrings",
"rjson",
"gt",
"gtExtras"
)
getwd()
source("src/constants.R")
source("src/themes.R")
pacman::p_load(
"data.table",
"ggplot2",
"stringr",
"tidyr",
"dplyr",
"ggtext",
"pheatmap",
"purrr",
"here",
"ggnewscale",
"Biostrings",
"rjson",
"gt",
"gtExtras"
)
